services:
  discovery-server:
    build: infra/discovery-server
    container_name: discovery-server
    ports:
      - "8761:8761"
    networks:
      - ewm-net
    healthcheck:
      test: "wget -T5 -qO- http://localhost:8761/actuator/health | grep UP || exit 1"
      timeout: 100s
      interval: 5s
      retries: 10
      start_period: 40s

  config-server:
    build: infra/config-server
    container_name: config-server
    depends_on:
      discovery-server:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=9091
    healthcheck:
      test: "wget -T5 -qO- http://localhost:9091/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 5s
      retries: 10
      start_period: 100s

  gateway-server:
    build: infra/gateway-server
    container_name: gateway-server
    ports:
      - "8080:8080"
    depends_on:
      config-server:
        condition: service_healthy
      category-server:
        condition: service_healthy
      compilation-server:
        condition: service_healthy
      event-server:
        condition: service_healthy
      location-server:
        condition: service_healthy
      request-server:
        condition: service_healthy
      user-server:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/

  stats-collector:
    build: stats/collector
    container_name: ewm-stats-collector
    depends_on:
      config-server:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - SERVER_PORT=9090
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
    healthcheck:
      test: "curl --fail --silent localhost:8083/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 15s
      retries: 10

  category-server:
    build: core/category
    container_name: category-server
    depends_on:
      category-db:
        condition: service_healthy
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://category-db:5434/category-db
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8180
    healthcheck:
      test: "wget -T5 -qO- http://localhost:9090/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 5s
      retries: 10
      start_period: 90s

  compilation-server:
    build: core/compilation
    container_name: compilation-server
    depends_on:
      compilation-db:
        condition: service_healthy
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://compilation-db:5435/compilation-db
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8181
    healthcheck:
      test: "wget -T5 -qO- http://localhost:9090/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 5s
      retries: 10
      start_period: 90s

  event-server:
    build: core/event
    container_name: event-server
    depends_on:
      event-db:
        condition: service_healthy
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://event-db:5436/event-db
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8182
    healthcheck:
      test: "wget -T5 -qO- http://localhost:9090/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 5s
      retries: 10
      start_period: 90s

  location-server:
    build: core/location
    container_name: location-server
    depends_on:
      location-db:
        condition: service_healthy
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://location-db:5436/location-db
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8183
    healthcheck:
      test: "wget -T5 -qO- http://localhost:9090/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 5s
      retries: 10
      start_period: 90s

  request-server:
    build: core/request
    container_name: request-server
    depends_on:
      request-db:
        condition: service_healthy
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://request-db:5436/request-db
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8184
    healthcheck:
      test: "wget -T5 -qO- http://localhost:9090/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 5s
      retries: 10
      start_period: 90s

  user-server:
    build: core/user
    container_name: user-server
    depends_on:
      user-db:
        condition: service_healthy
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-db:5436/user-db
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8184
    healthcheck:
      test: "wget -T5 -qO- http://localhost:9090/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 5s
      retries: 10
      start_period: 90s

  stats-db:
    image: postgres:16.1
    container_name: postgres-ewm-stats-db
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=user
      - POSTGRES_DB=ewm-stats
    networks:
      - ewm-net
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 15

  category-db:
    image: postgres:16.1
    container_name: postgres-category-db
    networks:
      - ewm-net
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_PASSWORD=user
      - POSTGRES_USER=password
      - POSTGRES_DB=category-db
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 15

  compilation-db:
    image: postgres:16.1
    container_name: postgres-compilation-db
    networks:
      - ewm-net
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_PASSWORD=user
      - POSTGRES_USER=password
      - POSTGRES_DB=compilation-db
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 15

  event-db:
    image: postgres:16.1
    container_name: postgres-event-db
    networks:
      - ewm-net
    ports:
      - "5436:5432"
    environment:
      - POSTGRES_PASSWORD=user
      - POSTGRES_USER=password
      - POSTGRES_DB=event-db
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 15

  location-db:
    image: postgres:16.1
    container_name: postgres-location-db
    networks:
      - ewm-net
    ports:
      - "5437:5432"
    environment:
      - POSTGRES_PASSWORD=user
      - POSTGRES_USER=password
      - POSTGRES_DB=location-db
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 15

  request-db:
    image: postgres:16.1
    container_name: postgres-request-db
    networks:
      - ewm-net
    ports:
      - "5438:5432"
    environment:
      - POSTGRES_PASSWORD=user
      - POSTGRES_USER=password
      - POSTGRES_DB=request-db
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 15

  user-db:
    image: postgres:16.1
    container_name: postgres-user-db
    networks:
      - ewm-net
    ports:
      - "5439:5432"
    environment:
      - POSTGRES_PASSWORD=user
      - POSTGRES_USER=password
      - POSTGRES_DB=user-db
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 15

  kafka:
    image: confluentinc/confluent-local:7.4.3
    hostname: kafka
    container_name: kafka
    networks:
      - ewm-net
    ports:
      - "9092:9092" # for client connections
      - "9101:9101" # JMX
    restart: unless-stopped
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      CLUSTER_ID: 'K0EA9p0yEe6MkAAAAkKsEg'

  kafka-init-topics:
    image: confluentinc/confluent-local:7.4.3
    container_name: kafka-init-topics
    depends_on:
      - kafka
    command: "bash -c \
                'kafka-topics --create --topic stats.user-actions.v1 \
                             --partitions 1 --replication-factor 1 --if-not-exists \
                             --bootstrap-server kafka:29092 && \
                kafka-topics --create --topic stats.events-similarity.v1 \
                             --partitions 1 --replication-factor 1 --if-not-exists \
                             --bootstrap-server kafka:29092'"
    init: true

networks:
  ewm-net: